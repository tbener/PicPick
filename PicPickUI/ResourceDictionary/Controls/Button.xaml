<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type Button}">
        <ContentPresenter x:Name="contentPresenter" RenderTransformOrigin="0.5,0.5" >
            <ContentPresenter.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </ContentPresenter.RenderTransform>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">

                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </ContentPresenter>
    </ControlTemplate>

    <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template" Value="{DynamicResource ImageButtonTemplate}"/>
    </Style>


    <!-- Button with text caption -->


    <Style x:Key="TextButtonBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="6.2" ShadowDepth="2" />
            </Setter.Value>
        </Setter>
        
    </Style>

    


    <ControlTemplate x:Key="TextButtonPressedTemplate"  TargetType="{x:Type Button}">
        <Border Style="{DynamicResource TextButtonBorderStyle}"
                Margin="3">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#262C2C74" Offset="0" />
                    <GradientStop Color="#882A56C0" Offset="0.97" />
                    <GradientStop Color="#AA04084B" Offset="0.999" />
                    <GradientStop Color="#96042149" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>

            <TextBlock 
                Text="{TemplateBinding Content}"
                Style="{DynamicResource TextButtonTextStyle}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="TextButtonMouseOverTemplate"  TargetType="{x:Type Button}">
        <Border Style="{DynamicResource TextButtonBorderStyle}">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#262C2C74" Offset="0" />
                    <GradientStop Color="#882A56C0" Offset="0.97" />
                    <GradientStop Color="#AA04084B" Offset="0.999" />
                    <GradientStop Color="#96042149" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>

            <TextBlock 
                Text="{TemplateBinding Content}"
                Style="{DynamicResource TextButtonTextStyle}"/>
        </Border>
    </ControlTemplate>


    <Style x:Key="TextButtonTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <ControlTemplate x:Key="TextButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" Style="{DynamicResource TextButtonBorderStyle}">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#FFE7E5CA" Offset="0" />
                    <GradientStop Color="#88E4CE3A" Offset="0.37" />
                    <GradientStop Color="#AAE5520D" Offset="0.69" />
                    <GradientStop Color="#73E4904A" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>

            <TextBlock 
                Text="{TemplateBinding Content}"
                Style="{DynamicResource TextButtonTextStyle}" 
                />
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" >
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
        </Style.Resources>
        <Setter Property="Template" Value="{DynamicResource TextButtonTemplate}" />
        <Setter Property="FontFamily" Value="/RadioK;component/Resources/Fonts/#VAGRounded BT"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="80" />
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template" Value="{DynamicResource TextButtonMouseOverTemplate}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template" Value="{DynamicResource TextButtonPressedTemplate}" />
            </Trigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>